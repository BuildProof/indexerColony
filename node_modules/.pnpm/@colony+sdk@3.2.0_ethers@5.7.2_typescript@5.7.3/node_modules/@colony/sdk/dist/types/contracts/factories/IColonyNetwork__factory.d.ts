import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IColonyNetwork, IColonyNetworkInterface } from "../IColonyNetwork.js";
export declare class IColonyNetwork__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "auction";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "quantity";
            readonly type: "uint256";
        }];
        readonly name: "AuctionCreated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "bridgeAddress";
            readonly type: "address";
        }];
        readonly name: "BridgeSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "colonyId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "colonyAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "ColonyAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "label";
            readonly type: "bytes32";
        }];
        readonly name: "ColonyLabelRegistered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "resolver";
            readonly type: "address";
        }];
        readonly name: "ColonyNetworkInitialised";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "version";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "resolver";
            readonly type: "address";
        }];
        readonly name: "ColonyVersionAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "version";
            readonly type: "uint256";
        }];
        readonly name: "ExtensionAddedToNetwork";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "deprecated";
            readonly type: "bool";
        }];
        readonly name: "ExtensionDeprecated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "version";
            readonly type: "uint256";
        }];
        readonly name: "ExtensionInstalled";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }];
        readonly name: "ExtensionUninstalled";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "version";
            readonly type: "uint256";
        }];
        readonly name: "ExtensionUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "metaColony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "rootSkillId";
            readonly type: "uint256";
        }];
        readonly name: "MetaColonyCreated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "userAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address payable";
            readonly name: "relayerAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }];
        readonly name: "MetaTransactionExecuted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "miningCycleResolver";
            readonly type: "address";
        }];
        readonly name: "MiningCycleResolverSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "feeInverse";
            readonly type: "uint256";
        }];
        readonly name: "NetworkFeeInverseSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "RecoveryModeEntered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "RecoveryModeExitApproved";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "RecoveryModeExited";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "setTo";
            readonly type: "bool";
        }];
        readonly name: "RecoveryRoleSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "slot";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "fromValue";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "toValue";
            readonly type: "bytes32";
        }];
        readonly name: "RecoveryStorageSlotSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "ens";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "rootNode";
            readonly type: "bytes32";
        }];
        readonly name: "RegistrarInitialised";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "miner";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "tokensLost";
            readonly type: "uint256";
        }];
        readonly name: "ReputationMinerPenalised";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "nLeaves";
            readonly type: "uint256";
        }];
        readonly name: "ReputationMiningCycleComplete";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "inactiveReputationMiningCycle";
            readonly type: "address";
        }];
        readonly name: "ReputationMiningInitialised";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "ReputationMiningRewardSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "newHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "newNLeaves";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "stakers";
            readonly type: "address[]";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "reward";
            readonly type: "uint256";
        }];
        readonly name: "ReputationRootHashSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "updateNumber";
            readonly type: "uint256";
        }];
        readonly name: "ReputationUpdateAddedFromBridge";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "count";
            readonly type: "uint256";
        }];
        readonly name: "ReputationUpdateSentToBridge";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "count";
            readonly type: "uint256";
        }];
        readonly name: "ReputationUpdateStored";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "updateNumber";
            readonly type: "uint256";
        }];
        readonly name: "ReputationUpdateStoredFromBridge";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "parentSkillId";
            readonly type: "uint256";
        }];
        readonly name: "SkillAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }];
        readonly name: "SkillAddedFromBridge";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }];
        readonly name: "SkillCreationStored";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }];
        readonly name: "SkillStoredFromBridge";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "tokenAuthorityAddress";
            readonly type: "address";
        }];
        readonly name: "TokenAuthorityDeployed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "tokenAddress";
            readonly type: "address";
        }];
        readonly name: "TokenDeployed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "tokenLocking";
            readonly type: "address";
        }];
        readonly name: "TokenLockingAddressSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "status";
            readonly type: "bool";
        }];
        readonly name: "TokenWhitelisted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "label";
            readonly type: "bytes32";
        }];
        readonly name: "UserLabelRegistered";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_version";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_resolver";
            readonly type: "address";
        }];
        readonly name: "addColonyVersion";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_extensionId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "_resolver";
            readonly type: "address";
        }];
        readonly name: "addExtensionToNetwork";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_colony";
            readonly type: "address";
        }];
        readonly name: "addPendingReputationUpdate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }];
        readonly name: "addPendingSkill";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_colony";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "int256";
            readonly name: "_amount";
            readonly type: "int256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_updateNumber";
            readonly type: "uint256";
        }];
        readonly name: "addReputationUpdateLogFromBridge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_parentSkillId";
            readonly type: "uint256";
        }];
        readonly name: "addSkill";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_parentSkillId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_skillCount";
            readonly type: "uint256";
        }];
        readonly name: "addSkillFromBridge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_node";
            readonly type: "bytes32";
        }];
        readonly name: "addr";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_address";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "int256";
            readonly name: "_amount";
            readonly type: "int256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }];
        readonly name: "appendReputationUpdateLog";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "approveExitRecovery";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }];
        readonly name: "bridgeCurrentRootHash";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_colony";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_updateNumber";
            readonly type: "uint256";
        }];
        readonly name: "bridgePendingReputationUpdate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }];
        readonly name: "bridgeSkillIfNotMiningChain";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "burnUnneededRewards";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_timeStaked";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_submissonIndex";
            readonly type: "uint256";
        }];
        readonly name: "calculateMinerWeight";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_minerWeight";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }];
        readonly name: "checkNotAdditionalProtectedVariable";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_recipient";
            readonly type: "address";
        }];
        readonly name: "claimMiningReward";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_tokenAddress";
            readonly type: "address";
        }];
        readonly name: "createColony";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_colonyAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_tokenAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_version";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "_colonyName";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "_metadata";
            readonly type: "string";
        }];
        readonly name: "createColony";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_colonyAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_tokenAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_version";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "_colonyName";
            readonly type: "string";
        }];
        readonly name: "createColony";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_colonyAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_tokenAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_version";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "_colonyName";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "_orbitdb";
            readonly type: "string";
        }, {
            readonly internalType: "bool";
            readonly name: "_useExtensionManager";
            readonly type: "bool";
        }];
        readonly name: "createColony";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_colonyAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_tokenAddress";
            readonly type: "address";
        }, {
            readonly internalType: "string";
            readonly name: "_name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "_symbol";
            readonly type: "string";
        }, {
            readonly internalType: "uint8";
            readonly name: "_decimals";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint256";
            readonly name: "_version";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "_colonyName";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "_metadata";
            readonly type: "string";
        }];
        readonly name: "createColonyForFrontend";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_tokenAddress";
            readonly type: "address";
        }];
        readonly name: "createMetaColony";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_colony";
            readonly type: "address";
        }, {
            readonly internalType: "address[]";
            readonly name: "_allowedToTransfer";
            readonly type: "address[]";
        }];
        readonly name: "deployTokenAuthority";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_tokenAuthority";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "_name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "_symbol";
            readonly type: "string";
        }, {
            readonly internalType: "uint8";
            readonly name: "_decimals";
            readonly type: "uint8";
        }];
        readonly name: "deployTokenViaNetwork";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_extensionId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bool";
            readonly name: "_deprecated";
            readonly type: "bool";
        }];
        readonly name: "deprecateExtension";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "_deprecated";
            readonly type: "bool";
        }];
        readonly name: "deprecateSkill";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "_changed";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "enterRecoveryMode";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "userAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes32";
            readonly name: "sigR";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "sigS";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "sigV";
            readonly type: "uint8";
        }];
        readonly name: "executeMetaTransaction";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "returnData";
            readonly type: "bytes";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "exitRecoveryMode";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_colony";
            readonly type: "address";
        }];
        readonly name: "getBridgedReputationUpdateCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "bridgedReputationCount";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_chainId";
            readonly type: "uint256";
        }];
        readonly name: "getBridgedSkillCounts";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "skillCount";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }];
        readonly name: "getChildSkillId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_childSkillId";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "getColony";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_colonyAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getColonyBridgeAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "bridge";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getColonyCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_count";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getColonyCreationSalt";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_version";
            readonly type: "uint256";
        }];
        readonly name: "getColonyVersionResolver";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_resolverAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getCurrentColonyVersion";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_version";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getENSRegistrar";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_address";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_extensionId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "_colony";
            readonly type: "address";
        }];
        readonly name: "getExtensionInstallation";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_installation";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_extensionId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "_version";
            readonly type: "uint256";
        }];
        readonly name: "getExtensionResolver";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_resolver";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getFeeInverse";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_feeInverse";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getMetaColony";
        readonly outputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "_colonyAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "userAddress";
            readonly type: "address";
        }];
        readonly name: "getMetatransactionNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getMiningChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "reputationMiningChainId";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_delegate";
            readonly type: "address";
        }];
        readonly name: "getMiningDelegator";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_delegator";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getMiningResolver";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "miningResolverAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }];
        readonly name: "getMiningStake";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timestamp";
                readonly type: "uint256";
            }];
            readonly internalType: "struct ColonyNetworkDataTypes.MiningStake";
            readonly name: "_info";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_parentSkillIndex";
            readonly type: "uint256";
        }];
        readonly name: "getParentSkillId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_parentSkillId";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly name: "getPayoutWhitelist";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "_status";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_colony";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_updateNumber";
            readonly type: "uint256";
        }];
        readonly name: "getPendingReputationUpdate";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "int256";
                readonly name: "amount";
                readonly type: "int256";
            }, {
                readonly internalType: "uint256";
                readonly name: "skillId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "colony";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "timestamp";
                readonly type: "uint256";
            }];
            readonly internalType: "struct ColonyNetworkDataTypes.PendingReputationUpdate";
            readonly name: "update";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_skillCount";
            readonly type: "uint256";
        }];
        readonly name: "getPendingSkillAddition";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "parentId";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_node";
            readonly type: "bytes32";
        }];
        readonly name: "getProfileDBAddress";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "_orbitdb";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_reputationMiningCycle";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "getReplacementReputationUpdateLogEntry";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "int256";
                readonly name: "amount";
                readonly type: "int256";
            }, {
                readonly internalType: "uint256";
                readonly name: "skillId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "colony";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "nUpdates";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "nPreviousUpdates";
                readonly type: "uint128";
            }];
            readonly internalType: "struct ColonyNetworkDataTypes.ReputationLogEntry";
            readonly name: "_reputationLogEntry";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_reputationMiningCycle";
            readonly type: "address";
        }];
        readonly name: "getReplacementReputationUpdateLogsExist";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "_exists";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bool";
            readonly name: "_active";
            readonly type: "bool";
        }];
        readonly name: "getReputationMiningCycle";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_repMiningCycleAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getReputationMiningCycleReward";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getReputationMiningSkillId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getReputationRootHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "rootHash";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getReputationRootHashNLeaves";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "nLeaves";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getReputationRootHashNNodes";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "nNodes";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }];
        readonly name: "getSkill";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint128";
                readonly name: "nParents";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "nChildren";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "parents";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "children";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "bool";
                readonly name: "DEPRECATED_globalSkill";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "DEPRECATED_deprecated";
                readonly type: "bool";
            }];
            readonly internalType: "struct ColonyNetworkDataTypes.Skill";
            readonly name: "_skill";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getSkillCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_count";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getTokenLocking";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_lockingAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_resolver";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_version";
            readonly type: "uint256";
        }];
        readonly name: "initialise";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "miningChainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "newHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "newNLeaves";
            readonly type: "uint256";
        }];
        readonly name: "initialiseReputationMining";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initialiseRootLocalSkill";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_rootLocalSkillId";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_extensionId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "_version";
            readonly type: "uint256";
        }];
        readonly name: "installExtension";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_colony";
            readonly type: "address";
        }];
        readonly name: "isColony";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "_addressIsColony";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "isInRecoveryMode";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "inRecoveryMode";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_addr";
            readonly type: "address";
        }];
        readonly name: "lookupRegisteredENSDomain";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "_domain";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "numRecoveryRoles";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "numRoles";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "_stakers";
            readonly type: "address[]";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "punishStakers";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "_colonyName";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "_orbitdb";
            readonly type: "string";
        }];
        readonly name: "registerColonyLabel";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "_username";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "_orbitdb";
            readonly type: "string";
        }];
        readonly name: "registerUserLabel";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }];
        readonly name: "removeRecoveryRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_recipient";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "reward";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_bridgeAddress";
            readonly type: "address";
        }];
        readonly name: "setColonyBridgeAddress";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_feeInverse";
            readonly type: "uint256";
        }];
        readonly name: "setFeeInverse";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_delegate";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "_allowed";
            readonly type: "bool";
        }];
        readonly name: "setMiningDelegate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_miningResolverAddress";
            readonly type: "address";
        }];
        readonly name: "setMiningResolver";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "_status";
            readonly type: "bool";
        }];
        readonly name: "setPayoutWhitelist";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }];
        readonly name: "setRecoveryRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_reputationMiningCycle";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "int256";
            readonly name: "_amount";
            readonly type: "int256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_colony";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "_nUpdates";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "_nPreviousUpdates";
            readonly type: "uint128";
        }];
        readonly name: "setReplacementReputationUpdateLogEntry";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "setReputationMiningCycleReward";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_newHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "_newNLeaves";
            readonly type: "uint256";
        }, {
            readonly internalType: "address[]";
            readonly name: "_stakers";
            readonly type: "address[]";
        }];
        readonly name: "setReputationRootHash";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "newHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "newNLeaves";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }];
        readonly name: "setReputationRootHashFromBridge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_value";
            readonly type: "bytes32";
        }];
        readonly name: "setStorageSlotRecovery";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_tokenLockingAddress";
            readonly type: "address";
        }];
        readonly name: "setTokenLocking";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_ens";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_rootNode";
            readonly type: "bytes32";
        }];
        readonly name: "setupRegistrar";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "stakeForMining";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "startNextCycle";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly name: "startTokenAuction";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "_interfaceID";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "_status";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_extensionId";
            readonly type: "bytes32";
        }];
        readonly name: "uninstallExtension";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "unstakeForMining";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "_orbitdb";
            readonly type: "string";
        }];
        readonly name: "updateColonyOrbitDB";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "_orbitdb";
            readonly type: "string";
        }];
        readonly name: "updateUserOrbitDB";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_extensionId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "_newVersion";
            readonly type: "uint256";
        }];
        readonly name: "upgradeExtension";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IColonyNetworkInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IColonyNetwork;
}
