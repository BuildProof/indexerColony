import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IColony, IColonyInterface } from "../IColony.js";
export declare class IColony__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "txHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "metadata";
            readonly type: "string";
        }];
        readonly name: "Annotation";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "amount";
            readonly type: "int256";
        }];
        readonly name: "ArbitraryReputationUpdate";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }];
        readonly name: "ArbitraryTransaction";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "users";
            readonly type: "address[]";
        }, {
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "amounts";
            readonly type: "int256[]";
        }];
        readonly name: "ColonyBootstrapped";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "fee";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "payoutRemainder";
            readonly type: "uint256";
        }];
        readonly name: "ColonyFundsClaimed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "fromPot";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "toPot";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "ColonyFundsMovedBetweenFundingPots";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "colonyNetwork";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "ColonyInitialised";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "metadata";
            readonly type: "string";
        }];
        readonly name: "ColonyMetadata";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "metadata";
            readonly type: "string";
        }];
        readonly name: "ColonyMetadataDelta";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "rewardInverse";
            readonly type: "uint256";
        }];
        readonly name: "ColonyRewardInverseSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "domainId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint8";
            readonly name: "role";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "setTo";
            readonly type: "bool";
        }];
        readonly name: "ColonyRoleSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "oldVersion";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "newVersion";
            readonly type: "uint256";
        }];
        readonly name: "ColonyUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "domainId";
            readonly type: "uint256";
        }];
        readonly name: "DomainAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "domainId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "deprecated";
            readonly type: "bool";
        }];
        readonly name: "DomainDeprecated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "domainId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "metadata";
            readonly type: "string";
        }];
        readonly name: "DomainMetadata";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }];
        readonly name: "ExpenditureAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }];
        readonly name: "ExpenditureCancelled";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "slot";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "claimDelay";
            readonly type: "uint256";
        }];
        readonly name: "ExpenditureClaimDelaySet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }];
        readonly name: "ExpenditureFinalized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "globalClaimDelay";
            readonly type: "uint256";
        }];
        readonly name: "ExpenditureGlobalClaimDelaySet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }];
        readonly name: "ExpenditureLocked";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "metadata";
            readonly type: "string";
        }];
        readonly name: "ExpenditureMetadataSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "slot";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "payoutModifier";
            readonly type: "int256";
        }];
        readonly name: "ExpenditurePayoutModifierSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "slot";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "ExpenditurePayoutSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "slot";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }];
        readonly name: "ExpenditureRecipientSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "slot";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }];
        readonly name: "ExpenditureSkillSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "storageSlot";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool[]";
            readonly name: "mask";
            readonly type: "bool[]";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32[]";
            readonly name: "keys";
            readonly type: "bytes32[]";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "value";
            readonly type: "bytes32";
        }];
        readonly name: "ExpenditureStateChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "ExpenditureTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "fundingPotId";
            readonly type: "uint256";
        }];
        readonly name: "FundingPotAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "localSkillId";
            readonly type: "uint256";
        }];
        readonly name: "LocalSkillAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "localSkillId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "deprecated";
            readonly type: "bool";
        }];
        readonly name: "LocalSkillDeprecated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "userAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address payable";
            readonly name: "relayerAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }];
        readonly name: "MetaTransactionExecuted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "paymentId";
            readonly type: "uint256";
        }];
        readonly name: "PaymentAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "paymentId";
            readonly type: "uint256";
        }];
        readonly name: "PaymentFinalized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "paymentId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "PaymentPayoutSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "paymentId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }];
        readonly name: "PaymentRecipientSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "paymentId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }];
        readonly name: "PaymentSkillSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "fundingPotId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "PayoutClaimed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "slot";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "tokenPayout";
            readonly type: "uint256";
        }];
        readonly name: "PayoutClaimed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "RecoveryModeEntered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "RecoveryModeExitApproved";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "RecoveryModeExited";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "setTo";
            readonly type: "bool";
        }];
        readonly name: "RecoveryRoleSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "slot";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "fromValue";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "toValue";
            readonly type: "bytes32";
        }];
        readonly name: "RecoveryStorageSlotSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "rewardPayoutId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "fee";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "rewardRemainder";
            readonly type: "uint256";
        }];
        readonly name: "RewardPayoutClaimed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "rewardPayoutId";
            readonly type: "uint256";
        }];
        readonly name: "RewardPayoutCycleEnded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "rewardPayoutId";
            readonly type: "uint256";
        }];
        readonly name: "RewardPayoutCycleStarted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "taskId";
            readonly type: "uint256";
        }];
        readonly name: "TaskAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "taskId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "specificationHash";
            readonly type: "bytes32";
        }];
        readonly name: "TaskBriefSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "taskId";
            readonly type: "uint256";
        }];
        readonly name: "TaskCanceled";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "reviewerAddresses";
            readonly type: "address[]";
        }];
        readonly name: "TaskChangedViaSignatures";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "taskId";
            readonly type: "uint256";
        }];
        readonly name: "TaskCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "taskId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "deliverableHash";
            readonly type: "bytes32";
        }];
        readonly name: "TaskDeliverableSubmitted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "taskId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "dueDate";
            readonly type: "uint256";
        }];
        readonly name: "TaskDueDateSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "taskId";
            readonly type: "uint256";
        }];
        readonly name: "TaskFinalized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "taskId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "enum ColonyDataTypes.TaskRole";
            readonly name: "role";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "TaskPayoutSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "taskId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "enum ColonyDataTypes.TaskRole";
            readonly name: "role";
            readonly type: "uint8";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "TaskRoleUserSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "taskId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }];
        readonly name: "TaskSkillSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "taskId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "enum ColonyDataTypes.TaskRole";
            readonly name: "role";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "rating";
            readonly type: "uint8";
        }];
        readonly name: "TaskWorkRatingRevealed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }];
        readonly name: "TokenUnlocked";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "TokensBurned";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "agent";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "who";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "TokensMinted";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_parentDomainId";
            readonly type: "uint256";
        }];
        readonly name: "addDomain";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_parentDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "_metadata";
            readonly type: "string";
        }];
        readonly name: "addDomain";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "addLocalSkill";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_txHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "string";
            readonly name: "_metadata";
            readonly type: "string";
        }];
        readonly name: "annotateTransaction";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "approveExitRecovery";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_approvee";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "approveStake";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "authority";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "colonyAuthority";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "_users";
            readonly type: "address[]";
        }, {
            readonly internalType: "int256[]";
            readonly name: "_amount";
            readonly type: "int256[]";
        }];
        readonly name: "bootstrapColony";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "burnTokens";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "cancelExpenditure";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "cancelExpenditureViaArbitration";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }];
        readonly name: "checkNotAdditionalProtectedVariable";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly name: "claimColonyFunds";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly name: "claimExpenditurePayout";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_payoutId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256[7]";
            readonly name: "_squareRoots";
            readonly type: "uint256[7]";
        }, {
            readonly internalType: "bytes";
            readonly name: "key";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "value";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "branchMask";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "siblings";
            readonly type: "bytes32[]";
        }];
        readonly name: "claimRewardPayout";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "deobligateStake";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "_deprecated";
            readonly type: "bool";
        }];
        readonly name: "deprecateDomain";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bool";
            readonly name: "deprecated";
            readonly type: "bool";
        }];
        readonly name: "deprecateExtension";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "localSkillId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "deprecated";
            readonly type: "bool";
        }];
        readonly name: "deprecateLocalSkill";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "_metadata";
            readonly type: "string";
        }];
        readonly name: "editColony";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "_metadataDelta";
            readonly type: "string";
        }];
        readonly name: "editColonyByDelta";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "_metadata";
            readonly type: "string";
        }];
        readonly name: "editDomain";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "int256";
            readonly name: "_amount";
            readonly type: "int256";
        }];
        readonly name: "emitDomainReputationPenalty";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "int256";
            readonly name: "_amount";
            readonly type: "int256";
        }];
        readonly name: "emitDomainReputationReward";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "int256";
            readonly name: "_amount";
            readonly type: "int256";
        }];
        readonly name: "emitSkillReputationPenalty";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "int256";
            readonly name: "_amount";
            readonly type: "int256";
        }];
        readonly name: "emitSkillReputationReward";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "enterRecoveryMode";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "userAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes32";
            readonly name: "sigR";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "sigS";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "sigV";
            readonly type: "uint8";
        }];
        readonly name: "executeMetaTransaction";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "exitRecoveryMode";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "finalizeExpenditure";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "finalizeExpenditureViaArbitration";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_payoutId";
            readonly type: "uint256";
        }];
        readonly name: "finalizeRewardPayout";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "finishUpgrade";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_obligator";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }];
        readonly name: "getApproval";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "approval";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "_sig";
            readonly type: "bytes4";
        }];
        readonly name: "getCapabilityRoles";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "roles";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getColonyNetwork";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "colonyNetwork";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "getDomain";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "skillId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "fundingPotId";
                readonly type: "uint256";
            }];
            readonly internalType: "struct ColonyDataTypes.Domain";
            readonly name: "domain";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDomainCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "count";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_fundingPotId";
            readonly type: "uint256";
        }];
        readonly name: "getDomainFromFundingPot";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "domainId";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "getExpenditure";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "enum ColonyDataTypes.ExpenditureStatus";
                readonly name: "status";
                readonly type: "uint8";
            }, {
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "fundingPotId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "domainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "finalizedTimestamp";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "globalClaimDelay";
                readonly type: "uint256";
            }];
            readonly internalType: "struct ColonyDataTypes.Expenditure";
            readonly name: "expenditure";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getExpenditureCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "count";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }];
        readonly name: "getExpenditureSlot";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address payable";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "claimDelay";
                readonly type: "uint256";
            }, {
                readonly internalType: "int256";
                readonly name: "payoutModifier";
                readonly type: "int256";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "skills";
                readonly type: "uint256[]";
            }];
            readonly internalType: "struct ColonyDataTypes.ExpenditureSlot";
            readonly name: "expenditureSlot";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly name: "getExpenditureSlotPayout";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "getFundingPot";
        readonly outputs: readonly [{
            readonly internalType: "enum ColonyDataTypes.FundingPotAssociatedType";
            readonly name: "associatedType";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint256";
            readonly name: "associatedTypeId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "payoutsWeCannotMake";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_potId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly name: "getFundingPotBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getFundingPotCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "count";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_potId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly name: "getFundingPotPayout";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "payout";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "userAddress";
            readonly type: "address";
        }];
        readonly name: "getMetatransactionNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly name: "getNonRewardPotsTotal";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_obligator";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }];
        readonly name: "getObligation";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "obligation";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "getPayment";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address payable";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "finalized";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "fundingPotId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "domainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "skills";
                readonly type: "uint256[]";
            }];
            readonly internalType: "struct ColonyDataTypes.Payment";
            readonly name: "payment";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getPaymentCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "count";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getRewardInverse";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "rewardInverse";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_payoutId";
            readonly type: "uint256";
        }];
        readonly name: "getRewardPayoutInfo";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "reputationState";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "colonyWideReputation";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "totalTokens";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "tokenAddress";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "blockTimestamp";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountRemaining";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "finalized";
                readonly type: "bool";
            }];
            readonly internalType: "struct ColonyDataTypes.RewardPayoutCycle";
            readonly name: "rewardPayoutCycle";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getRootLocalSkill";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "rootLocalSkill";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "getTask";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "specificationHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "deliverableHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "enum ColonyDataTypes.TaskStatus";
            readonly name: "status";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint256";
            readonly name: "dueDate";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "fundingPotId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "completionTimestamp";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "skillIds";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "getTaskChangeNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getTaskCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "count";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "_role";
            readonly type: "uint8";
        }];
        readonly name: "getTaskRole";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address payable";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "rateFail";
                readonly type: "bool";
            }, {
                readonly internalType: "enum ColonyDataTypes.TaskRatings";
                readonly name: "rating";
                readonly type: "uint8";
            }];
            readonly internalType: "struct ColonyDataTypes.Role";
            readonly name: "role";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "_role";
            readonly type: "uint8";
        }];
        readonly name: "getTaskWorkRatingSecret";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "secret";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "getTaskWorkRatingSecretsInfo";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "nSecrets";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "lastSubmittedAt";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getToken";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "tokenAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "getTokenApproval";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "getTotalTokenApproval";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domain";
            readonly type: "uint256";
        }];
        readonly name: "getUserRoles";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "roles";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "enum ColonyDataTypes.ColonyRole";
            readonly name: "_role";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childDomainId";
            readonly type: "uint256";
        }];
        readonly name: "hasInheritedUserRole";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "hasRole";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "enum ColonyDataTypes.ColonyRole";
            readonly name: "_role";
            readonly type: "uint8";
        }];
        readonly name: "hasUserRole";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "hasRole";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_colonyNetworkAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly name: "initialiseColony";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initialiseRootLocalSkill";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "version";
            readonly type: "uint256";
        }];
        readonly name: "installExtension";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "isInRecoveryMode";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "inRecoveryMode";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "lockExpenditure";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lockToken";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "timesLocked";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "_action";
            readonly type: "bytes";
        }];
        readonly name: "makeArbitraryTransaction";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "_targets";
            readonly type: "address[]";
        }, {
            readonly internalType: "bytes[]";
            readonly name: "_actions";
            readonly type: "bytes[]";
        }, {
            readonly internalType: "bool";
            readonly name: "_strict";
            readonly type: "bool";
        }];
        readonly name: "makeArbitraryTransactions";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }];
        readonly name: "makeExpenditure";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "expenditureId";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_target";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "_action";
            readonly type: "bytes";
        }];
        readonly name: "makeSingleArbitraryTransaction";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_wad";
            readonly type: "uint256";
        }];
        readonly name: "mintTokens";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_guy";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_wad";
            readonly type: "uint256";
        }];
        readonly name: "mintTokensFor";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_fromChildSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_toChildSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_fromPot";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_toPot";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly name: "moveFundsBetweenPots";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_fromChildSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_toChildSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_fromPot";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_toPot";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly name: "moveFundsBetweenPots";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "numRecoveryRoles";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "numRoles";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "obligateStake";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "colonyOwner";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "colonyName";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "orbitdb";
            readonly type: "string";
        }];
        readonly name: "registerColonyLabel";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }];
        readonly name: "removeRecoveryRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "_setTo";
            readonly type: "bool";
        }];
        readonly name: "setAdministrationRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "_setTo";
            readonly type: "bool";
        }];
        readonly name: "setArbitrationRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "_setTo";
            readonly type: "bool";
        }];
        readonly name: "setArchitectureRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_globalClaimDelay";
            readonly type: "uint256";
        }];
        readonly name: "setDefaultGlobalClaimDelay";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_claimDelay";
            readonly type: "uint256";
        }];
        readonly name: "setExpenditureClaimDelay";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "_slots";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "_claimDelays";
            readonly type: "uint256[]";
        }];
        readonly name: "setExpenditureClaimDelays";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "_metadata";
            readonly type: "string";
        }];
        readonly name: "setExpenditureMetadata";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "_metadata";
            readonly type: "string";
        }];
        readonly name: "setExpenditureMetadata";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "setExpenditurePayout";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "setExpenditurePayout";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "_slots";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "int256[]";
            readonly name: "_payoutModifiers";
            readonly type: "int256[]";
        }];
        readonly name: "setExpenditurePayoutModifiers";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "_slots";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "_amounts";
            readonly type: "uint256[]";
        }];
        readonly name: "setExpenditurePayouts";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }, {
            readonly internalType: "address payable";
            readonly name: "_recipient";
            readonly type: "address";
        }];
        readonly name: "setExpenditureRecipient";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "_slots";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "address payable[]";
            readonly name: "_recipients";
            readonly type: "address[]";
        }];
        readonly name: "setExpenditureRecipients";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_skillId";
            readonly type: "uint256";
        }];
        readonly name: "setExpenditureSkill";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "_slots";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "_skillIds";
            readonly type: "uint256[]";
        }];
        readonly name: "setExpenditureSkills";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_storageSlot";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool[]";
            readonly name: "_mask";
            readonly type: "bool[]";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "_keys";
            readonly type: "bytes32[]";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_value";
            readonly type: "bytes32";
        }];
        readonly name: "setExpenditureState";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "_setTo";
            readonly type: "bool";
        }];
        readonly name: "setFundingRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }];
        readonly name: "setRecoveryRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_rewardInverse";
            readonly type: "uint256";
        }];
        readonly name: "setRewardInverse";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "_setTo";
            readonly type: "bool";
        }];
        readonly name: "setRootRole";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_slot";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_value";
            readonly type: "bytes32";
        }];
        readonly name: "setStorageSlotRecovery";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_roles";
            readonly type: "bytes32";
        }];
        readonly name: "setUserRoles";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "key";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "value";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "branchMask";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "siblings";
            readonly type: "bytes32[]";
        }];
        readonly name: "startNextRewardPayout";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_newOwner";
            readonly type: "address";
        }];
        readonly name: "transferExpenditure";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_newOwner";
            readonly type: "address";
        }];
        readonly name: "transferExpenditureViaArbitration";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_obligator";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_recipient";
            readonly type: "address";
        }];
        readonly name: "transferStake";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }];
        readonly name: "uninstallExtension";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "unlockToken";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "lockId";
            readonly type: "uint256";
        }];
        readonly name: "unlockTokenForUser";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "updateApprovalAmount";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "orbitdb";
            readonly type: "string";
        }];
        readonly name: "updateColonyOrbitDB";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_newVersion";
            readonly type: "uint256";
        }];
        readonly name: "upgrade";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "newVersion";
            readonly type: "uint256";
        }];
        readonly name: "upgradeExtension";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_domainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childDomainId";
            readonly type: "uint256";
        }];
        readonly name: "userCanSetRoles";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "canSet";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_permissionDomainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childSkillIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_childDomainId";
            readonly type: "uint256";
        }];
        readonly name: "validateDomainInheritance";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "valid";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "key";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "value";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "branchMask";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "siblings";
            readonly type: "bytes32[]";
        }];
        readonly name: "verifyReputationProof";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "isValid";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "version";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "colonyVersion";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): IColonyInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IColony;
}
