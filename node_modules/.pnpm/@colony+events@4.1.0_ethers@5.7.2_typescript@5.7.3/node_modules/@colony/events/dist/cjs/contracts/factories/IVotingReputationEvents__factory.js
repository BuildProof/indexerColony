"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IVotingReputationEvents__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "userAddress",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address payable",
                name: "relayerAddress",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "payload",
                type: "bytes",
            },
        ],
        name: "MetaTransactionExecuted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "motionId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "creator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "domainId",
                type: "uint256",
            },
        ],
        name: "MotionCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "motionId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "escalator",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "domainId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "newDomainId",
                type: "uint256",
            },
        ],
        name: "MotionEscalated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "motionId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "eventIndex",
                type: "uint256",
            },
        ],
        name: "MotionEventSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "motionId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "action",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "executed",
                type: "bool",
            },
        ],
        name: "MotionFinalized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "motionId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "staker",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "vote",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "MotionRewardClaimed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "motionId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "staker",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "vote",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "MotionStaked",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "motionId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "voter",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "vote",
                type: "uint256",
            },
        ],
        name: "MotionVoteRevealed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "motionId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "voter",
                type: "address",
            },
        ],
        name: "MotionVoteSubmitted",
        type: "event",
    },
];
class IVotingReputationEvents__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IVotingReputationEvents__factory = IVotingReputationEvents__factory;
IVotingReputationEvents__factory.abi = _abi;
