import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IColonyNetworkEvents, IColonyNetworkEventsInterface } from "../IColonyNetworkEvents.js";
export declare class IColonyNetworkEvents__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "resolver";
            readonly type: "address";
        }];
        readonly name: "ColonyNetworkInitialised";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "tokenLocking";
            readonly type: "address";
        }];
        readonly name: "TokenLockingAddressSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "miningCycleResolver";
            readonly type: "address";
        }];
        readonly name: "MiningCycleResolverSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "feeInverse";
            readonly type: "uint256";
        }];
        readonly name: "NetworkFeeInverseSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "version";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly name: "resolver";
            readonly type: "address";
        }];
        readonly name: "ColonyVersionAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "metaColony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "rootSkillId";
            readonly type: "uint256";
        }];
        readonly name: "MetaColonyCreated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "colonyId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "colonyAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "ColonyAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "skillId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly name: "parentSkillId";
            readonly type: "uint256";
        }];
        readonly name: "SkillAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "auction";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "quantity";
            readonly type: "uint256";
        }];
        readonly name: "AuctionCreated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "inactiveReputationMiningCycle";
            readonly type: "address";
        }];
        readonly name: "ReputationMiningInitialised";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "hash";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly name: "nNodes";
            readonly type: "uint256";
        }];
        readonly name: "ReputationMiningCycleComplete";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "newHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly name: "newNNodes";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly name: "stakers";
            readonly type: "address[]";
        }, {
            readonly indexed: false;
            readonly name: "reward";
            readonly type: "uint256";
        }];
        readonly name: "ReputationRootHashSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "label";
            readonly type: "bytes32";
        }];
        readonly name: "UserLabelRegistered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "label";
            readonly type: "bytes32";
        }];
        readonly name: "ColonyLabelRegistered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "setTo";
            readonly type: "bool";
        }];
        readonly name: "RecoveryRoleSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "version";
            readonly type: "uint256";
        }];
        readonly name: "ExtensionAddedToNetwork";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "deprecated";
            readonly type: "bool";
        }];
        readonly name: "ExtensionDeprecated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "version";
            readonly type: "uint256";
        }];
        readonly name: "ExtensionInstalled";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }];
        readonly name: "ExtensionUninstalled";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "extensionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "version";
            readonly type: "uint256";
        }];
        readonly name: "ExtensionUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "RecoveryModeEntered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "RecoveryModeExitApproved";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }];
        readonly name: "RecoveryModeExited";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "slot";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "fromValue";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "toValue";
            readonly type: "bytes32";
        }];
        readonly name: "RecoveryStorageSlotSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "ens";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "rootNode";
            readonly type: "bytes32";
        }];
        readonly name: "RegistrarInitialised";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "miner";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "tokensLost";
            readonly type: "uint256";
        }];
        readonly name: "ReputationMinerPenalised";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "ReputationMiningRewardSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "status";
            readonly type: "bool";
        }];
        readonly name: "TokenWhitelisted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "userAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address payable";
            readonly name: "relayerAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }];
        readonly name: "MetaTransactionExecuted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "tokenAuthorityAddress";
            readonly type: "address";
        }];
        readonly name: "TokenAuthorityDeployed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "tokenAddress";
            readonly type: "address";
        }];
        readonly name: "TokenDeployed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "bridgeAddress";
            readonly type: "address";
        }];
        readonly name: "BridgeSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "updateNumber";
            readonly type: "uint256";
        }];
        readonly name: "ReputationUpdateAddedFromBridge";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "count";
            readonly type: "uint256";
        }];
        readonly name: "ReputationUpdateSentToBridge";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "count";
            readonly type: "uint256";
        }];
        readonly name: "ReputationUpdateStored";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "colony";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "updateNumber";
            readonly type: "uint256";
        }];
        readonly name: "ReputationUpdateStoredFromBridge";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }];
        readonly name: "SkillAddedFromBridge";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }];
        readonly name: "SkillCreationStored";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "skillId";
            readonly type: "uint256";
        }];
        readonly name: "SkillStoredFromBridge";
        readonly type: "event";
    }];
    static createInterface(): IColonyNetworkEventsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IColonyNetworkEvents;
}
