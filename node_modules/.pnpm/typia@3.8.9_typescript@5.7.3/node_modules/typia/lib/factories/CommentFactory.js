"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommentFactory = void 0;
var typescript_1 = __importDefault(require("typescript"));
var CommentFactory;
(function (CommentFactory) {
    CommentFactory.description = function (symbol) {
        var _a;
        var node = (_a = symbol.declarations) === null || _a === void 0 ? void 0 : _a[0];
        if (!node)
            return undefined;
        var range = typescript_1.default.getCommentRange(node);
        var text = node
            .getSourceFile()
            .text.substring(range.pos, range.end);
        var output = transform(text).join("\n");
        return output.length ? output : undefined;
    };
    CommentFactory.merge = function (comments) {
        return comments
            .map(function (part) { return part.text; })
            .map(function (str) { return str.split("\r\n").join("\n"); })
            .join("");
    };
    CommentFactory.string = CommentFactory.merge;
    CommentFactory.generate = CommentFactory.merge;
})(CommentFactory = exports.CommentFactory || (exports.CommentFactory = {}));
var transform = function (text) {
    var elements = text.split("\r\n").join("\n").split("\n");
    var first = lastIndexOf(elements)(function (elem) {
        return elem.trim().startsWith("/**");
    });
    var last = lastIndexOf(elements)(function (elem) {
        return elem.trim().endsWith("*/");
    });
    var cut = elements.slice(first, last + 1);
    return cut
        .map(function (elem, i) {
        if (i === 0)
            elem = elem.substring(elem.lastIndexOf("/**") + 3);
        if (i === cut.length - 1)
            elem = elem.substring(0, elem.lastIndexOf("*/"));
        return trim(elem);
    })
        .filter(function (str, i, array) {
        return (i !== 0 && i !== array.length - 1) || !!str.length;
    });
};
var lastIndexOf = function (array) {
    return function (pred) {
        for (var i = array.length - 1; i >= 0; i--)
            if (pred(array[i]))
                return i;
        return -1;
    };
};
var trim = function (str) {
    var vulnerable = function (ch) {
        return ch === " " || ch === "\n" || ch === "\t" || ch === "*";
    };
    var start;
    var end;
    for (start = 0; start < str.length; ++start)
        if (!vulnerable(str.charAt(start)))
            break;
    for (end = str.length - 1; end >= 0; --end)
        if (!vulnerable(str.charAt(end)))
            break;
    return start > end ? "" : str.substring(start, end + 1).trim();
};
//# sourceMappingURL=CommentFactory.js.map